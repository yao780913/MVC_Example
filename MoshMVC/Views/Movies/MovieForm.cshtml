@model MoshMVC.ViewModel.MoviesFormViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Movie Form</h2>

@using (Html.BeginForm("Save", "Movies")) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Movie</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Movie.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Movie.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Movie.Name, "", new { @class = "text-danger" }) 
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Movie.GenreId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Movie.GenreId,new SelectList(Model.Genres, "Id", "Name"), "-- Select --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Movie.GenreId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Movie.NumberInStock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Movie.NumberInStock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Movie.NumberInStock, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Movie.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Movie.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Movie.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Movie.DateAdded, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Movie.DateAdded, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Movie.DateAdded, "", new { @class = "text-danger" })
            </div>
        </div>

        @* It must be exist, to check this submit is for new or edit *@
        @Html.HiddenFor( m => m.Movie.Id)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
